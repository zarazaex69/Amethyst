import { Context } from 'grammy';
import { SubscriptionService } from '../services/subscription';
import { logger } from '../services/logger';

export class SubscriptionsCommand {
  private subscriptionService: SubscriptionService;

  constructor(subscriptionService?: SubscriptionService) {
    this.subscriptionService = subscriptionService || new SubscriptionService();
  }

  async execute(ctx: Context): Promise<void> {
    try {
      const userId = ctx.from?.id;
      if (!userId) {
        await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
        return;
      }

      const subscriptions = await this.subscriptionService.getUserSubscriptions(userId);
      
      if (subscriptions.length === 0) {
        await ctx.reply(
          'üì≠ **–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫**\n\n' +
          '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/subscribe <username> [repo]` –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∫–æ–º–º–∏—Ç–∞—Ö.'
        );
        return;
      }

      let message = `üìã **–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ (${subscriptions.length}):**\n\n`;
      
      subscriptions.forEach((sub, index) => {
        const repoText = sub.repo ? `/${sub.repo}` : '';
        const lastCheck = new Date(sub.lastCheckTime).toLocaleString('ru-RU');
        
        message += `${index + 1}. üë§ **${sub.username}${repoText}**\n`;
        message += `   üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${lastCheck}\n`;
        if (sub.lastCommitSha) {
          message += `   üîó –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: \`${sub.lastCommitSha.substring(0, 7)}\`\n`;
        }
        message += '\n';
      });

      message += 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/unsubscribe <username> [repo]` –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏.';

      await ctx.reply(message);

    } catch (error) {
      logger.error('Subscriptions command error:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫.');
    }
  }
}
